# -*- coding: utf-8 -*-
"""TicTacToe.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/13mC-aEDDLNe29wO0QswWApyHHkCyszw0
"""

class tictac():
  def __init__(self):
    self.board=[[' ',' ',' '],[' ',' ',' '],[' ',' ',' ']]
    self.full=0
  def print_game(self):
    for i in range(3):
      print(self.board[i])

  def check_winner(self):
    if self.full ==9:
      print("Draw")
      return True
    for i in range(3):
      if self.board[i][0] == self.board[i][1] and self.board[i][0] == self.board[i][2] and self.board[i][0] != ' ' :
        print(self.board[i][0] + "is the winner")
        return True
    for i in range(3):
      if self.board[0][i] == self.board[1][i] and self.board[0][i] == self.board[2][i] and self.board[0][i] != ' ' :
        print(self.board[0][i] + " is the winner")
        return True
    if self.board[1][1] != ' ': 
      if self.board[0][0] == self.board[1][1] and self.board[0][0] == self.board[2][2] :
        print(self.board[i][0] + " is the winner")
        return True
      if self.board[0][2] == self.board[1][1] and self.board[2][0] == self.board[0][2] :
        print(self.board[0][i] + " is the winner")
        return True
    return False

  def insert(self,player,position):
    x=position%3 
    y=int(position/3)
    if position <=9 and self.board[y][x]==' ' :
      self.board[y][x]=player
      self.full+=1
      
      return True
    else:
      print("Invalid position \n Enter again")
      return False

game=tictac()
result=False
print("Enter position as given below \n [1,2,3] \n [4,5,6] \n [7,8,9]")
while not result:
  game.print_game()
  x=input("Enter player X position: ")
  while (not game.insert('x',int(x)-1)):
    x=input()
  game.print_game()
  result=game.check_winner()
  if result==True:
    break
    
  y=input("Enter player O position: ")
  while not game.insert('o',int(y)-1):
    y=input()
  result=game.check_winner()